head(pred.nn)
pred.nn <- round(pred.nn)
table(pred.nn)
table(pred.nn,tr.test$V52)
mean(pred.nn==tr.test$V52)
fit.nn <- nnet(V52~.,data=tr.train,size=2,maxit=500)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
mean(pred.nn==tr.test$V52)
fit.nn <- nnet(V52~.,data=tr.train,size=3,maxit=500)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
mean(pred.nn==tr.test$V52)
fit.nn <- nnet(V52~.,data=tr.train,size=4,maxit=500)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
mean(pred.nn==tr.test$V52)
fit.nn <- nnet(V52~.,data=tr.train,size=5,maxit=500)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
fit.nn <- nnet(V52~.,data=tr.train,size=6,maxit=500)
fit.nn <- nnet(V52~.,data=tr.train,size=7,maxit=500)
fit.nn <- nnet(V52~.,data=tr.train,size=8,maxit=500)
fit.nn <- nnet(V52~.,data=tr.train,size=9,maxit=500)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
mean(pred.nn==tr.test$V52)
fit.nn <- nnet(V52~.,data=tr.train,size=10,maxit=500)
fit.gbm <- gbm(V52~V1+V2+V3,tr.train)
fit.gbm <- gbm(V52~V1+V2+V3,data = tr.train)
?gbm
fit.gbm <- gbm(V52~V1+V2+V3,data = tr.train,distribution = "gaussian")
pred.gbm <- predict(fit.gbm,tr.test)
pred.gbm <- predict(fit.gbm,tr.test,n.trees = 10)
pred.gbm
library(nnet)
fit.nn <- nnet(V52~.,data=tr.train,size=10,maxit=500)
fit.nn <- nnet(V52~.,data=tr.train,size=5,maxit=500)
fit.nn <- nnet(V52~.,data=tr.train,size=4,maxit=500)
fit.nn <- nnet(V52~.,data=tr.train,size=4)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
fit.nn <- nnet(V52~.,data=tr.train,size=1)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
fit.nn <- nnet(V52~.,data=tr.train,size=2)
pred.nn <- predict(fit.nn,tr.test)
for(i in 1:10){
fit.nn <- nnet(V52~.,data=tr.train,size=i)
}
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i)
}
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i)
}
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i)
}
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i)
}
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i)
}
fit.nn <- nnet(V52~.,data=tr.train,size=8)
pred.nn <- c()
err <- c()
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i)
pred.nn[i] <- predict(fit.nn,tr.test)
pred.nn[i] <- round(pred.nn[i])
table(pred.nn[i],tr.test$V52)
err[i] <- mean(pred.nn==tr.test$V52)
}
rm(pre)
rm(pred.nn)
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
err[i] <- mean(pred.nn==tr.test$V52)
}
err
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
err[i] <- mean(pred.nn==tr.test$V52)
}
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
err[i] <- mean(pred.nn==tr.test$V52)
}
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i,maxit=500)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
err[i] <- mean(pred.nn==tr.test$V52)
}
err
for(i in 1:10){
print(i)
fit.nn <- nnet(V52~.,data=tr.train,size=i,maxit=200)
pred.nn <- predict(fit.nn,tr.test)
pred.nn <- round(pred.nn)
table(pred.nn,tr.test$V52)
err[i] <- mean(pred.nn==tr.test$V52)
}
err
library(randomForest)
ft.rf <- randomForest(V52~.,tr.train,information=T)
pred.rf <- round(predict(ft.rf,tr.test))
table(pred.rf,tr.test$V52)
mean(pred.rf==tr.test$V52)
total.data <- rbind(tr,qu)
dim(tr)
dim(tr);dim(qu)
total.data <- rbind(tr[,-51],qu)
ft.rf.tot <- randomForest(V52~.,total.data,information=T)
pred.rf <- round(predict(ft.rf,tr.test))
library(devtools)
library(roxygen2)
install('EDA')
setwd("C:/Users/Abzooba/Desktop")
install('EDA')
library(EDA)
get_hist(mpg)
get_boxplot(mpg)
prop.table(mpg$manufacturer,mpg$cyl)
prop.table(mpg$manufacturer,1)
prop.table(table(mpg$manufacturer,mpg$cyl))
mpg$cyl
prop.table(table(mpg$manufacturer,mpg$cyl))[1]
prop.table(table(mpg$manufacturer,mpg$cyl))[1,1]
prop.table(table(mpg$manufacturer,mpg$cyl))[1,2]
prop.table(table(mpg$manufacturer,mpg$cyl))[1,3]
prop.table(table(mpg$manufacturer,mpg$cyl))[1,]
sum(prop.table(table(mpg$manufacturer,mpg$cyl))[1,])
sum(prop.table(table(mpg$manufacturer,mpg$cyl))[,1])
prop.table(table(mpg$manufacturer,mpg$cyl))
install.packages("gmodels")
library(gmodels)
CrossTable(mpg$manufacturer,mpg$cyl)
mpg
mpg[1,]
mpg[1,'year']
library(devtools)
library(roxygen2)
install('EDA')
library(EDA)
crosstab(mpg$manufacturer,mpg$cyl)
detach("package:gmodels", unload=TRUE)
remove.packages("gmodels", lib="~/R/win-library/3.3")
install('EDA')
library(EDA)
library(devtools)
library(roxygen2)
install('EDA')
install('EDA')
install('EDA')
library(devtools)
library(roxygen2)
install('EDA')
library(EDA)
crosstab(mpg$manufacturer,mpg$cyl)
?crosstab
??crosstab
boxplot.stats()
boxplot.stats
is.outlier <- function(x){
stats <- boxplot.stats(x)$stats
values <- boxplot.stats(x)$out
}
is.outlier <- function(x){
stats <- boxplot.stats(x)$stats
values <- boxplot.stats(x)$out
list(stats=stats,values=values)
}
is.outlier(mpg$hwy)
out <- is.outlier(mpg$hwy)
install('EDA')
library(EDA)
install('EDA')
library(EDA)
get_outlier(mpg$cty)
install('EDA')
library(EDA)
boxplot.stats
?boxplot.stats
install.packages("assertthat")
library(assertthat)
install.packages("crayon")
library(crayon)
devtools::document()
devtools::document()
?ggplot2
?EDA
get_outlier(mpg$cty)
get_outlier(mpg$cty)
subset
subset()
subset
complete()
complete
install('EDA')
library(EDA)
impute_outliers(mpg$hwy,method = whisker)
cat("pr")
cat("outliers "+max.whisker)
cat("outliers "+5)
cat("outliers "+"qq")
cat("outliers " "qq")
cat("outliers ", "qq")
cat("outliers ", boxplot.stats(mpg$hwy)$out)
cat("outliers: ", boxplot.stats(x)$out,"Replaced by: ")
cat("outliers: ", boxplot.stats(boxplot.stats(x)$stats)$out,"Replaced by: ")
install('EDA')
library(EDA)
impute_outliers(mpg$hwy,method = whisker)
impute_outliers(mpg$cty,method = whisker)
impute_outliers(mpg$fl,method = whisker)
gbm
gbm()
lm()
lm
install('EDA')
library(EDA)
impute_outliers(mpg$fl,method = whisker)
impute_outliers(mpg$hwy,method = whisker)
impute_outliers
length(boxplot.stats(mpg$cty)$out)
boxplot.stats(mpg$cty)$out
x=mpg$hwy
max.whisker <- boxplot.stats(x)$stats[5]
max.whisker
out.index <- which(x %in% (boxplot.stats(x)$out))
x[out.index] <- max.whisker
out.index
x[out.index]
cat("outliers: ", boxplot.stats(x)$out,"Replaced by: ",max.whisker)
install('EDA')
library(EDA)
impute_outliers(mpg$hwy,method = whisker)
install('EDA')
install('EDA')
library(EDA)
impute_outliers(mpg$cty,method = mean)
install('EDA')
library(EDA)
impute_outliers(mpg$cty,method = mean)
impute_outliers(mpg$cty,method = 'mean')
install('EDA')
library(EDA)
impute_outliers(mpg$cty,method = 'mean')
median(mpg$)
median(mpg$cty)
install('EDA')
install('EDA')
library(EDA)
impute_outliers((mpg$hwy))
impute_outliers((mpg$hwy),method = 'median')
impute_outliers((mpg$hwy),method = 'mean')
mean(mpg$hwy)
median(mpg$hwy)
impute_outliers((mpg$hwy),method = 'mean')
install('EDA')
install('EDA')
library(EDA)
impute_outliers((mpg$hwy))
impute_outliers((mpg$hwy),method = 'median')
impute_outliers((mpg$hwy),method = 'mean')
mpg.mis <- prodNA(mpg, noNA = 0.1)
table(is.na(mpg.mis))
mice(mpg.mis,m=5,maxit = 500, method = 'pmm', seed = 500,printFlag = F)
imputed <- mice(mpg.mis,m=5,maxit = 500, method = 'pmm', seed = 500,printFlag = F)
imputed$imp
?mice
mice
imputed <- mice(mpg.mis,m,maxit, method,seed,printFlag = F)
imputed <- mice(mpg.mis,m,maxit, method,seed=NA,printFlag = F)
imputed <- mice(mpg.mis,m=1,maxit = 500, method = 'pmm', seed = NA,printFlag = F)
imputed$imp
install('EDA')
library(EDA)
impute_missing(mpg.mis)
val <- impute_missing(mpg.mis)
ts
install('EDA')
library(EDA)
library(EDA)
plot(cbe)
plot(cbe.ts)
ts.plot(cbe.ts)
plot(cbe.ts)
plot(cbe.ts$choc)
plot(cbe.ts)
diff(AirPassengers,2)
plot(diff(AirPassengers))
plot(diff(AirPassengers,2))
plot(diff(AirPassengers,3))
plot(diff(AirPassengers))
plot(diff(AirPassengers,1))
hist(cbe.ts)
ts.plot(cbe.ts)
install('EDA')
library(EDA)
getplots_ts(AirPassengers)
install('EDA')
library(EDA)
getplots_ts(AirPassengers)
install('EDA')
library(EDA)
getplots_ts(AirPassengers)
remove.packages("Hmisc", lib="~/R/win-library/3.3")
install('EDA')
library(devtools)
library(roxygen2)
install('EDA')
library(EDA)
getplots_ts(AirPassengers)
getplots_ts(beer.ts)
install('EDA')
library(EDA)
diff.plot
install('EDA')
library(EDA)
install('EDA')
library(EDA)
diff.plot(AirPassengers)
library(EDA)
library(EDA)
install('EDA')
library(EDA)
diff.plot(AirPassengers)
plot(diff(log(AirPassengers)))
diff.plot(AirPassengers,log = F)
diff.plot(AirPassengers,log = F,diff = 2)
diff.plot(AirPassengers,diff = 0,log = F)
diff.plot(AirPassengers,diff = 0,log = F)
diff.plot(AirPassengers,diff = 1,log = F)
diff(AirPassengers,1)
diff(AirPassengers,0)
install('EDA')
library(EDA)
acf.plot(AirPassengers)
acf.plot(AirPassengers,diff = 0,log = F)
acf(AirPassengers)
acf.plot(AirPassengers,diff = 0,log = T)
acf(log(AirPassengers))
acf(diff(log(AirPassengers)))
acf.plot(AirPassengers,diff = 1,log = T)
acf(diff(log(AirPassengers),2))
acf.plot(AirPassengers,diff = 2,log = T)
acf.plot(AirPassengers,diff = 2,log = F)
acf(diff((AirPassengers),2))
acf(diff(AirPassengers),2)
acf.plot(AirPassengers,diff = 2,log = F)
install('EDA')
library(EDA)
pacf.plot(AirPassengers)
acf.plot(AirPassengers)
install('EDA')
library(EDA)
library(devtools)
library(roxygen2)
install('EDA')
library(EDA)
install('EDA')
library(EDA)
fit.out
detectAO(fit.out)
cat("Additive outliers",detectAO(fit.out))
cat("Additive outliers"+detectAO(fit.out))
cat("Additive outliers")
cat(detectAO(fit.out))
install('EDA')
library(EDA)
detect_tsouliers(fit.out)
cat("Additive outliers","\n")
detectAO(fit.out)
cat("Additive outliers","\n")
detectAO(fit.out)
install('EDA')
library(EDA)
detect_tsouliers(fit.out)
cat("Additive outliers:\n",5)
install('EDA')
library(EDA)
detect_tsouliers(fit.out)
detectAO(fit.out)
det=detectAO(fit.out)
det$ind
io <- detectIO(fit.out)
io <- detectIO(fit.out,verbose=F)
io <- detectIO(fit.out)
detect_tsouliers <- function(arima){
cat("Additive outliers:\n")
ao <- detectAO(fit.out)
cat("\n \n")
cat("Intelligent outliers:\n")
io <- detectIO(fit.out)
list(ao,io)
}
detect_tsouliers(fit.out)
detect_tsouliers <- function(arima){
cat("Additive outliers:\n")
ao <- detectAO(fit.out)
cat("\n \n")
cat("Intelligent outliers:\n")
io <- detectIO(fit.out)
}
detect_tsouliers(fit.out)
install_github("mrnvenkatesh/ed_analysis")
library(EDA)
remove.packages("TSA", lib="~/R/win-library/3.3")
library(devtools)
library(roxygen2)
install_github("mrnvenkatesh/ed_analysis")
library(EDA)
install('EDA')
library(EDA)
?impute_outliers
?boxplot.stats
install('EDA')
library(EDA)
?impute_outliers
install('EDA')
library(EDA)
?impute_outliers
library(devtools)
library(roxygen2)
install('EDA')
library(EDA)
?impute_outliers
library(EDA)
install('EDA')
library(EDA)
library(devtools)
library(roxygen2)
install('EDA')
library(EDA)
?impute_outliers
?impute_outliers
install('EDA')
library(EDA)
?impute_outliers
install('EDA')
library(EDA)
get_hist(mpg)
?impute_outliers
library(EDA)
get_hist(mpg)
pacf.plot(AirPassengers)
library(devtools)
library(roxygen2)
install('EDA')
library(EDA)
get_hist(mpg)
remove.packages("EDA", lib="~/R/win-library/3.3")
install('EDA')
install('EDA')
getwd()
install('EDA')
install_github("mrnvenkatesh/ed_analysis")
install('EDA')
install('EDA')
library(devtools)
library(roxygen2)
install('EDA')
library(EDA)
get_hist(mpg)
?impute_outliers
pacf.plot(AirPassengers)
ts.plot(cbe.ts)
plot(cbe.ts)
install_github("mrnvenkatesh/ed_analysis")
library(EDA)
install_github("mrnvenkatesh/ed_analysis")
library(EDA)
?impute_outliers
install_github("mrnvenkatesh/ed_analysis")
library(EDA)
get_hist(mpg)
get_boxplot(mpg)
desc(mpg)
desc(mpg$manufacturer)
CrossTable(mpg$manufacturer,mpg$cyl)
get_outlier(mpg$hwy)
