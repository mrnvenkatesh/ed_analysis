install.packages("~/EDA.zip", repos = NULL, type = "win.binary")
library(EDA)
library(devtools)
library(roxygen2)
install('EDA')
setwd("~/EDA")
install('EDA')
setwd("~/")
install('EDA')
library(EDA)
get_hist(austres)
get_hist(mpg)
cat("Do you want to write to pdf?
Yes(Y)
No(N)")
install('EDA')
library(EDA)
install('EDA')
library(EDA)
get_hist(mpg)
get_boxplot <- function(data){
data <- as.data.frame(data)
nam <- names(data)
for(i in nam){
if(class(data[,i])=="numeric"|class(data[,i])=="integer")
{
num.var <- i
print(ggplot(data,aes(data[,num.var]))+geom_boxplot(outlier.colour = 'red')
}
}
}
install('EDA')
library(EDA)
get_boxplot(mpg)
library(EDA)
setwd("C:/Users/Abzooba/Desktop/EDA")
install('EDA')
setwd("C:/Users/Abzooba/Desktop")
install('EDA')
library(EDA)
get_boxplot(mpg)
install('EDA')
library(EDA)
get_boxplot(mpg)
get_boxplot(mpg)
get_boxplot(mpg)
install('EDA')
library(EDA)
get_boxplot(mpg)
get_hist(mpg)
print(ggplot(data,aes(1,data[,num.var]))+geom_boxplot(outlier.colour = 'red'))
print(ggplot(data,aes(data[,num.var]))+geom_histogram(bins=50,fill='red',colour='black')+
geom_vline(aes(xintercept = mean(data[,num.var])),
linetype='dashed',color='blue',size=1))
data <- mpg
data <- as.data.frame(data)
print(ggplot(data,aes(data[,num.var]))+geom_histogram(bins=50,fill='red',colour='black')+
geom_vline(aes(xintercept = mean(data[,num.var])),
linetype='dashed',color='blue',size=1))
num.var <- i
for(i in nam){
if(class(data[,i])=="numeric"|class(data[,i])=="integer")
{
num.var <- i
print(num.var)
print(ggplot(data,aes(data[,num.var]))+geom_histogram(bins=50,fill='red',colour='black')+
geom_vline(aes(xintercept = mean(data[,num.var])),
linetype='dashed',color='blue',size=1))
}
}
nam <- names(data)
print("Histogram is generated for ")
for(i in nam){
if(class(data[,i])=="numeric"|class(data[,i])=="integer")
{
num.var <- i
print(num.var)
print(ggplot(data,aes(data[,num.var]))+geom_histogram(bins=50,fill='red',colour='black')+
geom_vline(aes(xintercept = mean(data[,num.var])),
linetype='dashed',color='blue',size=1))
}
}
